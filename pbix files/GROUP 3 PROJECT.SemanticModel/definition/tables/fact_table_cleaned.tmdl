table fact_table_cleaned
	lineageTag: dd6ad3d9-a11a-45e6-9ad7-1725108f2b2c

	measure 'Average HealthScore' = AVERAGE(fact_table_cleaned[HealthScore])
		lineageTag: 9419207e-4b12-49e8-8b1b-7dfafb3d4a34

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Max Temperature' = MAX(fact_table_cleaned[Temperature])
		lineageTag: 7ed884c8-e953-4ab8-9e59-27a1b74f9c4c

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'MIN Temperature' = MIN(fact_table_cleaned[Temperature])
		lineageTag: 665db2ad-57a9-41d2-94c7-7c4bae872af7

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Average Temperature' = AVERAGE(fact_table_cleaned[Temperature])
		lineageTag: be29bdfb-e7d5-4442-a8a7-e1fd2984774f

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Average Voltage' = AVERAGE(fact_table_cleaned[Voltage])
		lineageTag: da4df56d-93de-40cf-9cd6-ba0e9ea1387e

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Total Records' = SUM(fact_table_cleaned[SensorDataID])
		formatString: 0
		lineageTag: 69ab98ee-e356-48ec-9965-582e01aebbc9

	measure FailureCount = ```
			
			CALCULATE(
			    COUNTROWS(fact_table_cleaned),
			    FILTER(
			        fact_table_cleaned,
			        fact_table_cleaned[PredictedFailure] = "True"
			    )
			)
			
			```
		formatString: 0
		lineageTag: 8fb20f7d-11e8-4e6d-b6cc-606749b677be

	measure 'Total Cost Avoided' = SUM(fact_table_cleaned[CostAvoided])
		formatString: 0
		lineageTag: 7660639a-1197-4e89-abe8-6a007972e789

	measure 'Total Preventive Cost' = SUM(fact_table_cleaned[PreventiveCost])
		formatString: 0
		lineageTag: 89579f2d-198b-4e52-8f52-c35aa2722bab

	measure 'Total Reactive Cost' = SUM(fact_table_cleaned[ReactiveCost])
		formatString: 0
		lineageTag: a7ab3dd7-c106-436b-80b5-0830917a7257

	measure Percent_EquipmentsLikelyToFail = ```
			
			DIVIDE(
			    CALCULATE(
			        COUNTROWS(fact_table_cleaned),
			        fact_table_cleaned[PredictedFailure] = "True"
			    ),
			    COUNTROWS(fact_table_cleaned)
			)
			
			```
		formatString: 0
		lineageTag: 3448d324-5ddb-47e5-ba77-37d64ca8c1a7

	measure 'Average Cost Avoided per Failure' = DIVIDE(SUM(fact_table_cleaned[CostAvoided]), COUNTROWS(FILTER(fact_table_cleaned, fact_table_cleaned[PredictedFailure] = "TRUE")))
		formatString: 0
		lineageTag: e61e23a5-de40-4d34-b0f1-002b2cdca167

	measure 'Reactive-to-Preventive Cost Ratio' = DIVIDE(SUM(fact_table_cleaned[ReactiveCost]), SUM(fact_table_cleaned[PreventiveCost]))
		lineageTag: 6972aec2-b617-409e-ae5e-a558c283f44e

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Cost Savings %' = ```
			DIVIDE(SUM(fact_table_cleaned[CostAvoided]), SUM(fact_table_cleaned[ReactiveCost]) + SUM(fact_table_cleaned[PreventiveCost]))
			
			
			```
		lineageTag: 202dd15e-385f-4b4e-bd0c-4bab8bf2f4bc

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure CriticalEquipmentCount = ```
			
			COUNTROWS(
			    FILTER(
			        fact_table_cleaned,
			        fact_table_cleaned[EquipmentID] > 5 &&
			        RELATED(dim_equipment_cleaned[IsCritical]) = "True"
			    )
			)
			
			```
		formatString: 0
		lineageTag: 901b732b-b1b2-48ce-9f20-4990a565cc6c

	measure 'Average Pressure' = AVERAGE(fact_table_cleaned[Pressure])
		lineageTag: 65c6ae4b-9af5-42a8-ac11-efc516ceaebd

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure CriticalEquip_HighVibration =
			
			CALCULATE(
			    COUNTROWS(fact_table_cleaned),
			    FILTER(
			        fact_table_cleaned,
			        fact_table_cleaned[Vibration] > 5 &&
			        RELATED(dim_equipment_cleaned[IsCritical]) = "True"
			    )
			)
		formatString: 0
		lineageTag: 36c9bcd3-6e7e-44f4-8aaf-da0b057e9872

	measure CriticalEquip_LowHealthScore = ```
			
			CALCULATE(
			    COUNTROWS(fact_table_cleaned),
			    FILTER(
			        fact_table_cleaned,
			        fact_table_cleaned[HealthScore] < 50 &&
			        RELATED(dim_equipment_cleaned[IsCritical]) = "True"
			    )
			)
			
			```
		formatString: 0
		lineageTag: 5db9d673-3b81-46e4-a382-bdd0f1284818

	measure NonCriticalEquip_LowHealthScore =
			
			CALCULATE(
			    COUNTROWS(fact_table_cleaned),
			    FILTER(
			        fact_table_cleaned,
			        fact_table_cleaned[HealthScore] < 50 &&
			        RELATED(dim_equipment_cleaned[IsCritical]) = "False"
			    )
			)
		formatString: 0
		lineageTag: 17c5cd3d-be4a-48aa-9506-401310eeb031

	measure NonCriticalEquip_HighHealthScore =
			
			CALCULATE(
			    COUNTROWS(fact_table_cleaned),
			    FILTER(
			        fact_table_cleaned,
			        fact_table_cleaned[HealthScore] > 50 &&
			        RELATED(dim_equipment_cleaned[IsCritical]) = "False"
			    )
			)
		formatString: 0
		lineageTag: db87790a-a69d-4d52-816a-97e5677cf7dd

	measure 'Failure Rate per Equipment Type' = DIVIDE(CALCULATE(COUNTROWS(fact_table_cleaned), fact_table_cleaned[PredictedFailure] = 1), CALCULATE(DISTINCTCOUNT(fact_table_cleaned[EquipmentID]), ALL(fact_table_cleaned)))
		formatString: 0%;-0%;0%
		lineageTag: 9ce4537f-f01d-4f70-ad93-3420545661ff

	column SensorDataID
		dataType: string
		lineageTag: 2c964c14-2b6a-4647-a771-cc523db0de0c
		summarizeBy: none
		sourceColumn: SensorDataID

		annotation SummarizationSetBy = Automatic

	column Timestamp
		dataType: dateTime
		formatString: Short Date
		lineageTag: f34a846c-7465-460c-bb58-5b42944a36f5
		summarizeBy: none
		sourceColumn: Timestamp

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column EquipmentID
		dataType: string
		lineageTag: 272ba7a1-e5f1-4abe-8569-dc1bbc20cd69
		summarizeBy: none
		sourceColumn: EquipmentID

		annotation SummarizationSetBy = Automatic

	column TimeID
		dataType: string
		lineageTag: 030bac3d-29cb-40fe-b6af-18c9cd4e0b1d
		summarizeBy: none
		sourceColumn: TimeID

		annotation SummarizationSetBy = Automatic

	column SensorID
		dataType: string
		lineageTag: 790d1ad1-1e7e-4752-bb32-2903d200dc76
		summarizeBy: none
		sourceColumn: SensorID

		annotation SummarizationSetBy = Automatic

	column LocationID
		dataType: string
		lineageTag: c47167fa-8dac-4da2-9bb8-d1b18c70f29d
		summarizeBy: none
		sourceColumn: LocationID

		annotation SummarizationSetBy = Automatic

	column Temperature
		dataType: double
		formatString: 0.00
		lineageTag: 85a98420-2bff-4895-8aeb-b65366ea94af
		summarizeBy: sum
		sourceColumn: Temperature

		annotation SummarizationSetBy = Automatic

	column Vibration
		dataType: double
		formatString: 0.00
		lineageTag: 66160c14-1a05-4c4f-9ed3-51f39249d0ea
		summarizeBy: sum
		sourceColumn: Vibration

		annotation SummarizationSetBy = Automatic

	column Pressure
		dataType: double
		formatString: 0.00
		lineageTag: 6d5b39a4-53a3-489e-a8eb-d44ec61f7c55
		summarizeBy: sum
		sourceColumn: Pressure

		annotation SummarizationSetBy = Automatic

	column Voltage
		dataType: double
		formatString: 0.00
		lineageTag: e7dc19f1-d085-452b-8b5c-43bbeb9d5b1f
		summarizeBy: sum
		sourceColumn: Voltage

		annotation SummarizationSetBy = Automatic

	column TempNorm
		dataType: double
		formatString: 0.00
		lineageTag: 91c8e9b9-ff73-46b5-9b77-5c9b9e5c3eff
		summarizeBy: sum
		sourceColumn: TempNorm

		annotation SummarizationSetBy = Automatic

	column VibNorm
		dataType: double
		formatString: 0.00
		lineageTag: 39c5953b-c19b-497b-a02a-420fa082618c
		summarizeBy: sum
		sourceColumn: VibNorm

		annotation SummarizationSetBy = Automatic

	column VoltNorm
		dataType: double
		formatString: 0.00
		lineageTag: 71df9dc1-3585-48f6-a0b5-845dda983d55
		summarizeBy: sum
		sourceColumn: VoltNorm

		annotation SummarizationSetBy = Automatic

	column PresNorm
		dataType: double
		formatString: 0.00
		lineageTag: e3d5dc7e-b4ea-40cc-9548-6a5973676886
		summarizeBy: sum
		sourceColumn: PresNorm

		annotation SummarizationSetBy = Automatic

	column HealthScore
		dataType: double
		formatString: 0.00
		lineageTag: 117e48c4-937f-4dd7-884e-6cd49e0e35ae
		summarizeBy: sum
		sourceColumn: HealthScore

		annotation SummarizationSetBy = Automatic

	column PredictedFailure
		dataType: boolean
		formatString: """TRUE"";""TRUE"";""FALSE"""
		lineageTag: 08d84f68-57fe-4e02-88cd-061931627a71
		summarizeBy: none
		sourceColumn: PredictedFailure

		annotation SummarizationSetBy = Automatic

	column ReactiveCost
		dataType: int64
		formatString: 0
		lineageTag: 8e69cca0-b5fb-4a83-beeb-cec891dd7ca5
		summarizeBy: sum
		sourceColumn: ReactiveCost

		annotation SummarizationSetBy = Automatic

	column PreventiveCost
		dataType: int64
		formatString: 0
		lineageTag: 31994d8c-a14f-4beb-b75d-3c67ebbc9777
		summarizeBy: sum
		sourceColumn: PreventiveCost

		annotation SummarizationSetBy = Automatic

	column CostAvoided
		dataType: int64
		formatString: 0
		lineageTag: 3b07f227-1fe6-4623-9dc7-c3df3be77183
		summarizeBy: sum
		sourceColumn: CostAvoided

		annotation SummarizationSetBy = Automatic

	column TemperatureCategory
		dataType: string
		lineageTag: b35e5a66-9693-48c3-bec1-281c6d5ec646
		summarizeBy: none
		sourceColumn: TemperatureCategory

		annotation SummarizationSetBy = Automatic

	hierarchy 'Timestamp Hierarchy'
		lineageTag: 982f84a7-9f34-402c-85d9-a7c71b2705f1

		level Timestamp
			lineageTag: 3d990ce9-420b-4ec7-875c-1c83363898af
			column: Timestamp

	partition fact_table_cleaned = m
		mode: import
		source =
				let
				    Source = Csv.Document(File.Contents("C:\Users\user\Downloads\DSA 3050A\GROUP PROJECT\powerbi-capstone-Automotive-parts-02\Data\cleaned\fact_table_cleaned.csv"),[Delimiter=",", Columns=19, Encoding=1252, QuoteStyle=QuoteStyle.None]),
				    #"Promoted Headers" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),
				    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"Timestamp", type date}, {"Temperature", type number}, {"Vibration", type number}, {"Pressure", type number}, {"Voltage", type number}, {"TempNorm", type number}, {"VibNorm", type number}, {"VoltNorm", type number}, {"PresNorm", type number}, {"HealthScore", type number}, {"ReactiveCost", Int64.Type}, {"PreventiveCost", Int64.Type}, {"CostAvoided", Int64.Type}, {"PredictedFailure", type logical}}),
				    #"Added Conditional Column" = Table.AddColumn(#"Changed Type", "TemperatureCategory", each if [Temperature] <= 62.47 then "Low" else if [Temperature] <= 83.34 then "Medium" else "High"),
				    #"Changed Type1" = Table.TransformColumnTypes(#"Added Conditional Column",{{"TemperatureCategory", type text}})
				in
				    #"Changed Type1"

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

